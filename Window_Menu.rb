#==============================================================================
# ■ RK::HorrorMenu
#------------------------------------------------------------------------------
# 　メニュー画面用モジュール
#==============================================================================
module RK
  module HorrorMenu
    
    # タイトル名
    TitleName = "MENU"
    
    # 背景画像(Graphics/System/)
    Background = "title"
    
    # コマンドの大きさ
    ItemWidth = 160
    ItemHeight = 40
    
    # コマンドカーソルの色
    Color1 = Color.new(255, 128, 0, 128)
    Color2 = Color.new(255, 128, 0, 0)
    
    # Command[CommandName, SceneClass]
    Command = [
    ["ITEM", Scene_Items],
    ["ARCHIVE", Scene_Archives],
    ["MAP", Scene_Maps],
    ["OPTION", Scene_Option],
    ["SAVE", Scene_Saves],
    ["LOAD", Scene_Loads],
    ["EXIT", Scene_Episodes]
    ]

  end
end

#==============================================================================
# ■ Scene_Map
#------------------------------------------------------------------------------
# 　メニューを開いたときのSEを変更します
#==============================================================================
class Scene_Map < Scene_Base
  #--------------------------------------------------------------------------
  # ● メニュー画面の呼び出し(SE変更)
  #--------------------------------------------------------------------------
  def call_menu
    Audio.se_play("Audio/SE/Blow7", 100, 80)
    Window_MenuList::init_command_position
    SceneManager.call(Scene_Menu)
  end
end

#==============================================================================
# ■ Sprite_Cursor
#------------------------------------------------------------------------------
# 　カーソルスプライト
#==============================================================================
class Sprite_MenuCursor < Sprite_Cursor
  #--------------------------------------------------------------------------
  # ● カーソルを作成
  #--------------------------------------------------------------------------
  def create_cursor
    self.bitmap = Bitmap.new(@width, @height)
    bitmap.gradient_fill_rect(0, 0, @width, @height, @color1, @color2)
  end
end

#==============================================================================
# ■ Window_MenuList
#------------------------------------------------------------------------------
# 　メニュー画面のコマンドを表示するクラスです。
#==============================================================================
class Window_MenuList < Window_RK
  #--------------------------------------------------------------------------
  # ● インクルード
  #--------------------------------------------------------------------------
  include RK::HorrorMenu
  #--------------------------------------------------------------------------
  # ● オブジェクト初期化
  #--------------------------------------------------------------------------
  def initialize(x, y, width, height)
    super(x, y, width, height)
    self.opacity = 0
    activate
  end
  #--------------------------------------------------------------------------
  # ● カーソルの作成
  #--------------------------------------------------------------------------
  def create_cursor
    @cursor = Sprite_MenuCursor.new(item_width, item_height, Color1, Color2)
    set_cursor_x
    set_cursor_y
  end
  #--------------------------------------------------------------------------
  # ● コマンド選択位置の初期化（クラスメソッド）
  #--------------------------------------------------------------------------
  def self.init_command_position
    @@last_command_symbol = 0
  end
  #--------------------------------------------------------------------------
  # ● 項目の幅を取得
  #--------------------------------------------------------------------------
  def item_width
    contents_width
  end
  #--------------------------------------------------------------------------
  # ● 桁数の取得
  #--------------------------------------------------------------------------
  def col_max
    return 1
  end
  #--------------------------------------------------------------------------
  # ● 項目の高さを取得
  #--------------------------------------------------------------------------
  def item_height
    return ItemHeight
  end
  #--------------------------------------------------------------------------
  # ● アイテムリストの作成
  #--------------------------------------------------------------------------
  def make_item_list
    Command.size.times {|i| @data.push(Command[i][0]) }
  end
  #--------------------------------------------------------------------------
  # ● 項目の描画
  #--------------------------------------------------------------------------
  def draw_item(index)
    rect = item_rect(index)
    contents.gradient_fill_rect(rect, Color.new(0, 0, 0), Color.new(0, 0, 0, 0))
    rect.x += 20
    contents.font.name = "HGS明朝B"
    contents.font.size = 18
    draw_text(rect, Command[index][0], 0)
  end
  #--------------------------------------------------------------------------
  # ● 決定ボタンが押されたときの処理
  #--------------------------------------------------------------------------
  def process_ok
    @@last_command_symbol = index
    super
  end
  #--------------------------------------------------------------------------
  # ● 前回の選択位置を復帰
  #--------------------------------------------------------------------------
  def first_index
    @@last_command_symbol
  end
end

#==============================================================================
# ■ Window_MenuMain
#------------------------------------------------------------------------------
# 　メニュー画面で表示するステータスウィンドウです。
#==============================================================================
class Window_MenuMain < Window_RK
  #--------------------------------------------------------------------------
  # ● オブジェクト初期化
  #--------------------------------------------------------------------------
  def initialize(x, y, width, height)
    super(x, y, width, height)
    self.opacity = 0
  end
  #--------------------------------------------------------------------------
  # ● ステータスの描画
  #--------------------------------------------------------------------------
  def draw_status
    #self.contents = Bitmap.new("Graphics/System/aa.png")
  end
end

#==============================================================================
# ■ Scene_Menu
#------------------------------------------------------------------------------
# 　メニュー画面の処理を行うクラスです。
#==============================================================================
class Scene_Menu < Scene_MenuBase

  #--------------------------------------------------------------------------
  # ● 開始処理
  #--------------------------------------------------------------------------
  def start
    super
    create_background
    create_title_window
    create_command_window
    create_menu_window
  end
  #--------------------------------------------------------------------------
  # ● 背景の作成
  #--------------------------------------------------------------------------
  def create_background
    @background_sprite = Sprite.new
    @background_sprite.bitmap = Cache.system( RK::HorrorMenu::Background )
  end
  #--------------------------------------------------------------------------
  # ● 背景の解放
  #--------------------------------------------------------------------------
  def dispose_background
    @background_sprite.dispose
  end
  #--------------------------------------------------------------------------
  # ● タイトルウィンドウの作成
  #--------------------------------------------------------------------------
  def create_title_window
    @title_window = Window_Title.new
    @title_window.set_text( RK::HorrorMenu::TitleName )
    @title_window.viewport = @viewport
  end
  #--------------------------------------------------------------------------
  # ● コマンドウィンドウの作成
  #--------------------------------------------------------------------------
  def create_command_window
    ww = RK::HorrorMenu::ItemWidth
    wh = Graphics.height - @title_window.height
    @command_window = Window_MenuList.new(0, @title_window.height+30, ww, wh)
    @command_window.set_handler(:ok, method(:on_menu_ok))
    @command_window.set_handler(:cancel, method(:return_scene))
  end
  #--------------------------------------------------------------------------
  # ● メニュー画面の作成
  #-------------------------------------------------------------------------
  def create_menu_window
    ww = Graphics.width - @command_window.width
    wh = Graphics.height - @title_window.height
    @menu_window = Window_MenuMain.new(@command_window.width, @title_window.height, ww, wh)
    @menu_window.viewport = @viewport
  end
  #--------------------------------------------------------------------------
  # ● メニュー画面の作成
  #-------------------------------------------------------------------------
  def on_menu_ok
    SceneManager.call(RK::HorrorMenu::Command[@command_window.index][1])
  end
end
